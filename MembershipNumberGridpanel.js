/*
 * File: app/view/MembershipNumberGridpanel.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cobuy.view.MembershipNumberGridpanel', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.membershipnumbergridpanel',

    requires: [
        'Ext.grid.RowNumberer',
        'Ext.grid.column.Date',
        'Ext.grid.View'
    ],

    height: 250,
    width: 400,
    store: 'AllMembers',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'rownumberer',
                    width: 50,
                    dataIndex: 'string',
                    text: 'S/n'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'firstname',
                    text: 'Firstname'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'middlename',
                    text: 'Middlename'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'lastname',
                    text: 'Lastname'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'email',
                    text: 'Email'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'username',
                    text: 'Username'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'current_membership_type_id',
                    text: 'Membership Type'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'address1',
                    text: 'Address 1'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'address2',
                    text: 'Address 2'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var city = Ext.getStore('Cities');
                        var thiscity = city.findRecord('id', value);
                        return thiscity!== null ? thiscity.get('name'): value;
                    },
                    width: 300,
                    dataIndex: 'city_id',
                    text: 'City'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var states = Ext.getStore('States');
                        var thisstate = states.findRecord('id', value);
                        return thisstate!== null ? thisstate.get('name'): value;
                    },
                    width: 300,
                    dataIndex: 'state_id',
                    text: 'State'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var country = Ext.getStore('Countries');
                        var thiscountry = country.findRecord('id', value);
                        return thiscountry!== null ? thiscountry.get('name'): value;
                    },
                    width: 300,
                    dataIndex: 'country_id',
                    text: 'Country'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'membership_number',
                    text: 'Membership Number'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'status',
                    text: 'Status'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'religion',
                    text: 'Religion'
                },
                {
                    xtype: 'datecolumn',
                    width: 300,
                    dataIndex: 'dateofbirth',
                    text: 'Date of Birth',
                    format: 'd/m/Y'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'maritalstatus',
                    text: 'Marital Status'
                },
                {
                    xtype: 'datecolumn',
                    width: 300,
                    dataIndex: 'create_time',
                    text: 'Date Created',
                    format: 'd/m/Y'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var userStore = Ext.getStore('AllMembers');
                        var user = userStore.findRecord('id', value);
                        if(user.get('middlename') === null || user.get('middlename') === undefined){
                            var name = user.get('firstname') + " " + user.get('lastname');
                        }else{
                            var name = user.get('firstname') + " " + user.get('middlename') + " " + user.get('lastname');
                        }

                        return user!== null ? name: value;

                    },
                    width: 300,
                    dataIndex: 'create_user_id',
                    text: 'Created By'
                },
                {
                    xtype: 'datecolumn',
                    width: 300,
                    dataIndex: 'update_time',
                    text: 'Date Updated'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var userStore = Ext.getStore('AllMembers');
                        var user = userStore.findRecord('id', value);
                        if(user.get('middlename') === null || user.get('middlename') === undefined){
                            var name = user.get('firstname') + " " + user.get('lastname');
                        }else{
                            var name = user.get('firstname') + " " + user.get('middlename') + " " + user.get('lastname');
                        }

                        return user!== null ? name: value;

                    },
                    width: 300,
                    dataIndex: 'update_user_id',
                    text: 'Updated By'
                }
            ]
        });

        me.callParent(arguments);
    }

});